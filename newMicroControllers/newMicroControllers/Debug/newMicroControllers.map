Archive member included to satisfy reference by file (symbol)

c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
                              C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o (exit)
c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)

Discarded input sections

 .data          0x0000000000000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 .bss           0x0000000000000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 .text          0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .text          0x0000000000000000        0x0 snakeLogic.o
 .data          0x0000000000000000        0x0 snakeLogic.o
 .bss           0x0000000000000000        0x0 snakeLogic.o
 .text          0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x0000000000001000 rw !x
eeprom           0x0000000000810000 0x0000000000001000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
LOAD main.o
LOAD snakeLogic.o
START GROUP
LOAD c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr51/memx-const\libm.a
END GROUP
START GROUP
LOAD c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a
LOAD c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr51/memx-const\libm.a
LOAD c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr51/memx-const\libc.a
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const\libatmega128.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800100]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800100
                [0x0000000000020000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x0000000000001000]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                [0x0000000000001000]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x102
 *(.vectors)
 .vectors       0x0000000000000000       0x8c C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
                0x0000000000000000                __vector_default
                0x0000000000000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.dinit)
 .dinit         0x000000000000008c       0x1d data_init
                0x00000000000000aa                . = ALIGN (0x2)
 *fill*         0x00000000000000a9        0x1 
                0x00000000000000aa                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000aa        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000aa                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
                0x00000000000000aa                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000aa                __ctors_start = .
 *(.ctors)
                0x00000000000000aa                __ctors_end = .
                0x00000000000000aa                __dtors_start = .
 *(.dtors)
                0x00000000000000aa                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000aa        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
                0x00000000000000aa                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000aa        0xc C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b6       0x40 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_copy_data.o)
                0x00000000000000b6                __do_copy_data
                0x00000000000000e8                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000f6        0x8 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 *(.init9)
                0x00000000000000fe                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000000fe        0x0 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
                0x00000000000000fe                _exit
                0x00000000000000fe                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000000fe        0x4 c:/program files/microchip/xc8/v2.31/avr/bin/../lib/gcc/avr/5.4.0/avr51/memx-const\libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000102                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000000102
                [!provide]                        PROVIDE (__data_start, .)
 *(.gnu.linkonce.d*)
 *(.gnu.linkonce.r*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x0
                [!provide]                        PROVIDE (__bss_start, .)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end, .)
                0x0000000000000102                __data_load_start = LOADADDR (.data)
                0x0000000000000102                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800100        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800100                _end = .

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2f
 *(.comment)
 .comment       0x0000000000000000       0x2f main.o
                                         0x30 (size before relaxing)
 .comment       0x000000000000002f       0x30 snakeLogic.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x120
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0xb0 main.o
 .debug_aranges
                0x00000000000000b0       0x70 snakeLogic.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x19ae
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 .debug_info    0x0000000000000780      0xb90 main.o
 .debug_info    0x0000000000001310      0x69e snakeLogic.o

.debug_abbrev   0x0000000000000000      0xada
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 .debug_abbrev  0x0000000000000718      0x227 main.o
 .debug_abbrev  0x000000000000093f      0x19b snakeLogic.o

.debug_line     0x0000000000000000      0x8fe
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x16d C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 .debug_line    0x000000000000016d      0x4d6 main.o
 .debug_line    0x0000000000000643      0x2bb snakeLogic.o

.debug_frame    0x0000000000000000      0x2e8
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x20c main.o
 .debug_frame   0x000000000000020c       0xdc snakeLogic.o

.debug_str      0x0000000000000000      0x302
 *(.debug_str)
 .debug_str     0x0000000000000000      0x27d C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
 .debug_str     0x000000000000027d       0x3e main.o
 .debug_str     0x00000000000002bb       0x47 snakeLogic.o

.debug_loc      0x0000000000000000      0x73a
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x4b8 main.o
 .debug_loc     0x00000000000004b8      0x282 snakeLogic.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000      0x100
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0xa0 main.o
 .debug_ranges  0x00000000000000a0       0x60 snakeLogic.o

.debug_macro
 *(.debug_macro)
OUTPUT(newMicroControllers.elf elf32-avr)
LOAD linker stubs
LOAD data_init

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o

.bss.snakeLengthInc
                0x000000000080013a        0x2
 .bss.snakeLengthInc
                0x000000000080013a        0x2 main.o

.bss.timerCounter
                0x000000000080013c        0x2
 .bss.timerCounter
                0x000000000080013c        0x2 main.o

.bss.current_direction
                0x0000000000800140        0x1
 .bss.current_direction
                0x0000000000800140        0x1 main.o

.bss.snake      0x0000000000800100       0x28
 .bss.snake     0x0000000000800100       0x28 snakeLogic.o

.text.__vector_9
                0x0000000000000102       0xdc
 .text.__vector_9
                0x0000000000000102       0xdc main.o
                0x0000000000000102                __vector_9

.text.display_snake
                0x00000000000001de       0xc2
 .text.display_snake
                0x00000000000001de       0xc2 main.o
                0x00000000000001de                display_snake

.text.advanceSnake
                0x00000000000002a0       0xa4
 .text.advanceSnake
                0x00000000000002a0       0xa4 snakeLogic.o

.text.gameOverICON
                0x0000000000000344       0x6a
 .text.gameOverICON
                0x0000000000000344       0x6a main.o
                0x0000000000000344                gameOverICON

.text.checkSnake
                0x00000000000003ae       0x66
 .text.checkSnake
                0x00000000000003ae       0x66 snakeLogic.o

.text.clearMatrixBoard
                0x0000000000000414       0x62
 .text.clearMatrixBoard
                0x0000000000000414       0x62 main.o
                0x0000000000000414                clearMatrixBoard

.text.startTWI  0x0000000000000476       0x52
 .text.startTWI
                0x0000000000000476       0x52 main.o
                0x0000000000000476                startTWI

.text.main      0x00000000000004c8       0x3c
 .text.main     0x00000000000004c8       0x3c main.o
                0x00000000000004c8                main

.text.initSnake
                0x0000000000000504       0x38
 .text.initSnake
                0x0000000000000504       0x38 snakeLogic.o
                0x0000000000000504                initSnake

.text.gameOver  0x000000000000053c       0x30
 .text.gameOver
                0x000000000000053c       0x30 snakeLogic.o
                0x000000000000053c                gameOver

.text.clearSnake
                0x000000000000056c       0x2e
 .text.clearSnake
                0x000000000000056c       0x2e snakeLogic.o
                0x000000000000056c                clearSnake

.text.moveUp    0x000000000000059a       0x2c
 .text.moveUp   0x000000000000059a       0x2c snakeLogic.o
                0x000000000000059a                moveUp

.text.moveDown  0x00000000000005c6       0x2c
 .text.moveDown
                0x00000000000005c6       0x2c snakeLogic.o
                0x00000000000005c6                moveDown

.text.moveLeft  0x00000000000005f2       0x2c
 .text.moveLeft
                0x00000000000005f2       0x2c snakeLogic.o
                0x00000000000005f2                moveLeft

.text.moveRight
                0x000000000000061e       0x2c
 .text.moveRight
                0x000000000000061e       0x2c snakeLogic.o
                0x000000000000061e                moveRight

.text.sendCommand
                0x000000000000064a       0x28
 .text.sendCommand
                0x000000000000064a       0x28 main.o
                0x000000000000064a                sendCommand

.text.wait      0x0000000000000672       0x1e
 .text.wait     0x0000000000000672       0x1e main.o
                0x0000000000000672                wait

.text.__vector_5
                0x0000000000000690       0x1e
 .text.__vector_5
                0x0000000000000690       0x1e main.o
                0x0000000000000690                __vector_5

.text.__vector_6
                0x00000000000006ae       0x1e
 .text.__vector_6
                0x00000000000006ae       0x1e main.o
                0x00000000000006ae                __vector_6

.text.__vector_7
                0x00000000000006cc       0x1e
 .text.__vector_7
                0x00000000000006cc       0x1e main.o
                0x00000000000006cc                __vector_7

.text.__vector_8
                0x00000000000006ea       0x18
 .text.__vector_8
                0x00000000000006ea       0x18 main.o
                0x00000000000006ea                __vector_8

.text.getSnake  0x0000000000000702       0x18
 .text.getSnake
                0x0000000000000702       0x18 snakeLogic.o
                0x0000000000000702                getSnake

.text.twi_tx    0x000000000000071a       0x14
 .text.twi_tx   0x000000000000071a       0x14 main.o
                0x000000000000071a                twi_tx

.text.twi_start
                0x000000000000072e       0x10
 .text.twi_start
                0x000000000000072e       0x10 main.o
                0x000000000000072e                twi_start

.text.twi_init  0x000000000000073e        0xc
 .text.twi_init
                0x000000000000073e        0xc main.o
                0x000000000000073e                twi_init

.text.setSnakeSpeed
                0x000000000000074a        0xa
 .text.setSnakeSpeed
                0x000000000000074a        0xa main.o
                0x000000000000074a                setSnakeSpeed

.text.setSnakeLenghtInc
                0x0000000000000754        0xa
 .text.setSnakeLenghtInc
                0x0000000000000754        0xa main.o
                0x0000000000000754                setSnakeLenghtInc

.text.getSnakeLength
                0x000000000000075e        0xa
 .text.getSnakeLength
                0x000000000000075e        0xa snakeLogic.o
                0x000000000000075e                getSnakeLength

.text.twi_stop  0x0000000000000768        0x8
 .text.twi_stop
                0x0000000000000768        0x8 main.o
                0x0000000000000768                twi_stop

.text.setDirection
                0x0000000000000770        0x6
 .text.setDirection
                0x0000000000000770        0x6 main.o
                0x0000000000000770                setDirection

.text           0x0000000000000776        0x4
 .text          0x0000000000000776        0x4 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.6.364/xc8/avr/lib/avr51/memx-const/crtatmega128.o
                0x0000000000000776                __vector_22
                0x0000000000000776                __vector_28
                0x0000000000000776                __vector_1
                0x0000000000000776                __vector_32
                0x0000000000000776                __vector_34
                0x0000000000000776                __vector_24
                0x0000000000000776                __vector_12
                0x0000000000000776                __bad_interrupt
                0x0000000000000776                __vector_31
                0x0000000000000776                __vector_3
                0x0000000000000776                __vector_23
                0x0000000000000776                __vector_30
                0x0000000000000776                __vector_25
                0x0000000000000776                __vector_11
                0x0000000000000776                __vector_13
                0x0000000000000776                __vector_17
                0x0000000000000776                __vector_19
                0x0000000000000776                __vector_27
                0x0000000000000776                __vector_33
                0x0000000000000776                __vector_4
                0x0000000000000776                __vector_2
                0x0000000000000776                __vector_21
                0x0000000000000776                __vector_15
                0x0000000000000776                __vector_29
                0x0000000000000776                __vector_26
                0x0000000000000776                __vector_14
                0x0000000000000776                __vector_10
                0x0000000000000776                __vector_16
                0x0000000000000776                __vector_18
                0x0000000000000776                __vector_20

.rodata         0x0000000000800128       0x10 load address 0x000000000000077a
 .rodata        0x0000000000800128       0x10 main.o

.data.snakeSpeed
                0x0000000000800138        0x2 load address 0x000000000000078a
 .data.snakeSpeed
                0x0000000000800138        0x2 main.o

.data.length    0x000000000080013e        0x2 load address 0x000000000000078c
 .data.length   0x000000000080013e        0x2 snakeLogic.o
